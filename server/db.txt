Ticket

ticketId (number)
state (Open or close, TRUE open, FALSE closed)
category (String) (“inquiry”, “maintenance”, “new feature”, “administrative”, “payment”)
owner (String, username di Users)
ownerId (number, userId di Users, lo user per inserire deve essere autenticato)
title (String)
timestamp (String, hour level precision, necessaria per la parte di estimation, quando la prendo dal server faccio dayjs(date))
description (String) (non-empty block text)

Answers

answerId (number)
answer (String) (non-empty block text)
author (string)
authorID (number, userId di Users)
timestamp (String, hour level precision "YY-MM-DD hh:mm")
ticketId (number)

Users

username (string)
email (string)
pwd
userId (number)

Construct db: 
sqlite3 mydatabase.db < schema.sql

Populate db:
.read populate_data.sql

TODO

- API per generic visitor? cosi non prendo tutti i dati 

- controllare campi che non siano vuoti e che esistano parametri nel body DONE
- controllare che se la stringa non è vuota, non siano spazi!! .trim??  DONE
- Controllare se mettere dentro try catch, controllare spazi vuoti anche dopo sanitize DONE

- controllare ticket non chiuso DONE
- change the category of the ticket. DONE
- controllare siano stringhe isString !!!!! DONE


- ordinare per time ticket e risposte! DONE
- post tickets sminchia le ore!! DONE
- controllare gli orari! DONE

- METTERE DATETIME IN QUERY!!!!!! DONE

- mostrare pop up read only con le info (completare le info)  DONE
- bisogna aggiungere qualcosa per passare ad /add  DONE
- abilitare edit (on line)??
- errorMSG sopra add DONE (per ora controllo solo che i testi non siano vuoti)
- prendere category da server DONE

- categories in useEffect DA SOLE???? se no carico ogni volta dal server

FINAL version
- when it is first submitted to the system (timestamp creato backend) DONE
- newlines in the blocks of text when entering the text itself (gestire inserimento newline) DONE
- year-month-day hour:min:sec DONE
- Other information will automatically be set by the system upon confirmation: the timestamp, the status (“open”) and the owner (the logged-in user). DONE also for answers
- A generic visitor of the website can, regardless of its authentication status, see a list of all tickets, sorted by the most recent one (on the basis of the date/time timestamp when it was created)
- Then, they can select one or more tickets from the list and the ticket items will be expanded to see all the information related to that ticket, i.e., the content of the blocks of text (with date, time,timestamp and  author), displayed in chronological order from the oldest to the newest.
Ticket dal più recente al meno recente, risposte al ticket dalla meno recente alla più recente DONE
- add answer DONE

- abilitare API per modifica categoria e stato (controllare se utente admin e utente proprietario ticket)
devi essere autenticato, poi controllo in base ai campi presenti nel body (category e stato) se puoi fare quella operazione

- Show More -> Logout -> Crash ...
- mostrare bottoni (join conversation solo se ticket aperto) e bottone edit solo se sei admin DONE
- Quando ticket è chiuso, far vedere a schermo che non puoi aggiungere una risposta DONE
- mostrare bottone per chiudere ticket solo se admin o propietario DONE
- controllare come stampare errori a schermo DONE
- mostrare errore in edit (componente error definito se app setta Error???) DONE

- secondo server
- handleError??
- 1 api per ogni ticket??
- sicurezza API server2 !!

- API unica per estimation tutti ticket??
- verificare sicurezza dell'estimation