Ticket

ticketId (number)
state (Open or close, TRUE open, FALSE closed)
category (String) (“inquiry”, “maintenance”, “new feature”, “administrative”, “payment”)
owner (String, username di Users)
ownerId (number, userId di Users, lo user per inserire deve essere autenticato)
title (String)
timestamp (String, hour level precision, necessaria per la parte di estimation, quando la prendo dal server faccio dayjs(date))
description (String) (non-empty block text)

Answers

answerId (number)
answer (String) (non-empty block text)
author (string)
authorID (number, userId di Users)
timestamp (String, hour level precision "YY-MM-DD hh:mm")
ticketId (number)

Users

username (string)
email (string)
pwd
userId (number)

Construct db: 
sqlite3 mydatabase.db < schema.sql

Populate db:
.read populate_data.sql

TODO

- API per generic visitor? cosi non prendo tutti i dati 
ONLY the title, the date, the owner, the category and the state (open or closed).
poi conviene quando faccio log in in base a isLoggedIn se è possibile chiamare una query diversa
- Before/while inserting the comment, the existence of the foreign key value must be checked
- Escaping is not always possible: for instance, a visual HTML editor that
must immediately show the result, or some HTML formatting is allowed
• If input is HTML that needs to be rendered, it must be sanitized before
allowing the browser to process it

- controllare campi che non siano vuoti e che esistano parametri nel body
- controllare che se la stringa non è vuota, non siano spazi!! .trim??  DONE
- Controllare se mettere dentro try catch, controllare spazi vuoti anche dopo sanitize DONE
- iniziare front end